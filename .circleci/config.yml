version: 2

ignoreTrunk: &ignoreTrunk
  filters:
    branches:
      ignore: master

terraformenv: &terraformenv
  working_directory: /tmp/project
  docker:
    - image: docker.mirror.hashicorp.services/hashicorp/terraform:light

jobs:
  formatting:
    <<: *terraformenv
    steps:
      - checkout
      - run:
          name: "Check formatting"
          command: terraform fmt -check

  validate:
    <<: *terraformenv
    steps:
      - checkout
      - run:
          name: "Initialize without backend"
          command: |
            terraform init -input=false -backend=false
      - run:
          name: validate
          command: |
            terraform validate

  init:
    <<: *terraformenv
    steps:
      - checkout
      - run:
          name: terraform init
          command: |
            terraform init \
              -input=false \
              -backend-config="key=$(echo $CIRCLE_BRANCH | sha256sum | cut -d ' ' -f1)"
      - persist_to_workspace:
          root: .
          paths:
            - .

  plan:
    <<: *terraformenv
    steps:
      - attach_workspace:
          at: .
      - run:
          name: plan
          command: |
            terraform plan -out tfapply -var-file variables.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    <<: *terraformenv
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve tfapply >> plan_output.txt
      - run:
          name: Comment on PR
          command: |
            PR_ID=${CIRCLE_PULL_REQUEST##*/}
            BRANCH_SHA=$(echo $CIRCLE_BRANCH | sha256sum | cut -d ' ' -f1)
            PLAN=$(cat plan_output.txt)
            apk --no-cache add curl
            curl -X POST \
            https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/issues/$PR_ID/comments \
            -H 'Authorization: Bearer '"$GITHUB_TOKEN"'' \
            --data-binary @- << EOF
            {
                "body": "Development API Deployed to $BRANCH_SHA!\n\n Executed Plan:\n```$PLAN```"
            }
            EOF


      - persist_to_workspace:
          root: .
          paths:
            - .

  plan-destroy:
    name: Wait to destroy environment until ready to merge
    <<: *terraformenv
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan
          command: |
            terraform plan -destroy -out tfdestroy -var-file variables.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy:
    name: Destroy infrastructure before allowing merge
    <<: *terraformenv
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            terraform apply -auto-approve tfdestroy

workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - init:
          <<: *ignoreTrunk
      - validate:
          <<: *ignoreTrunk
      - formatting:
          <<: *ignoreTrunk
      - plan:
          requires:
            - init
          <<: *ignoreTrunk
      - apply:
          requires:
            - plan
          <<: *ignoreTrunk
      - plan-destroy:
          requires:
            - apply
          <<: *ignoreTrunk
      - hold-destroy:
          type: approval
          requires:
            - plan-destroy
          <<: *ignoreTrunk
      - destroy:
          requires:
            - hold-destroy
          <<: *ignoreTrunk
